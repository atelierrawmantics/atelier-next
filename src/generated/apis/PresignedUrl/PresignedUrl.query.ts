import { useMutation } from '@tanstack/react-query'

import { fetchExtended } from '@/configs/fetch/fetch-extend'

import {
  CommonErrorType,
  PresignedErrorMessageType,
} from '../@types/data-contracts'
import { MutationHookParams } from '../@types/react-query-type'
import { PresignedUrlApi } from './PresignedUrl.api'

/**
 * !DO NOT EDIT THIS FILE
 *
 * 스크립트가 실행될때, 파일을 항상 새로 쓰기 때문에 파일 수정시 작성내용이 제거 될 수 있습니다.
 */

/**
 * tok-cli.config.ts 에서 설정된 instance 경로의 axios instace 가 적용된, api 의 instance 입니다.
 */
export const presignedUrlApi = new PresignedUrlApi({
  customFetch: fetchExtended,
})

/**
 * query key 에 undefined 를 포함시키지 않기 위한 함수입니다.
 */
const isDefined = (v: unknown) => typeof v !== 'undefined'

/**
 * query-keys
 */
export const QUERY_KEY_PRESIGNED_URL_API = {
  CREATE: () => ['PRESIGNED_URL_CREATE'],
}

/**
 * @description ![file_upload_flow](/_static/docs/file_upload_flow.png) * 플로우 1, 2를 input onChange 핸들러에서 실행해야합니다. 1. 미시 서명된 URL 발급 2. 미리 서명된 URL로 파일 업로드 - method: `POST` - url: `url` (1에서 발급받은 url) - form-data: { ...fields, 'Content-Type': '{file.type}/' }
 *
 * @tags presigned_url
 * @name PresignedUrlCreate
 * @summary 미리 서명된 URL 발급
 * @request POST:/v1/presigned_url/
 * @secure  */

export const usePresignedUrlCreateMutation = (
  params: MutationHookParams<
    typeof presignedUrlApi.presignedUrlCreate,
    { error: PresignedErrorMessageType | CommonErrorType }
  >,
) => {
  const mutationKey = QUERY_KEY_PRESIGNED_URL_API.CREATE()
  return useMutation({
    mutationKey,
    mutationFn: presignedUrlApi.presignedUrlCreate,
    ...params?.options,
  })
}
