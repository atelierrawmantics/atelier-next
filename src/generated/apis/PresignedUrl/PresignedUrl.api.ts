import { ContentType, HttpClient, RequestParams } from '../@http-client'
import {
  CommonErrorType,
  PresignedErrorMessageType,
  PresignedRequestType,
  PresignedType,
} from '../@types/data-contracts'
import { DeepOmitReadOnly } from '../@types/util-types'

/**
 * !DO NOT EDIT THIS FILE
 *
 * 스크립트가 실행될때, 파일을 항상 새로 쓰기 때문에 파일 수정시 작성내용이 제거 될 수 있습니다.
 */

export class PresignedUrlApi<
  SecurityDataType = unknown,
> extends HttpClient<SecurityDataType> {
  /**
   * @description ![file_upload_flow](/_static/docs/file_upload_flow.png) * 플로우 1, 2를 input onChange 핸들러에서 실행해야합니다. 1. 미시 서명된 URL 발급 2. 미리 서명된 URL로 파일 업로드 - method: `POST` - url: `url` (1에서 발급받은 url) - form-data: { ...fields, 'Content-Type': '{file.type}/' }
   *
   * @tags presigned_url
   * @name PresignedUrlCreate
   * @summary 미리 서명된 URL 발급
   * @request POST:/v1/presigned_url/
   * @secure
   */

  presignedUrlCreate = (variables: {
    data: DeepOmitReadOnly<PresignedRequestType>
    params?: RequestParams
  }) =>
    this.request<PresignedType, PresignedErrorMessageType | CommonErrorType>({
      path: `/v1/presigned_url/`,
      method: 'POST',
      body: variables.data,
      secure: true,
      type: ContentType.Json,
      format: 'json',
      ...variables.params,
    })
}

//
