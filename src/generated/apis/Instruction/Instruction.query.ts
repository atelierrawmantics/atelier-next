import { useMutation, useQuery } from '@tanstack/react-query'

import { fetchExtended } from '@/configs/fetch/fetch-extend'

import {
  CommonErrorType,
  InstructionErrorMessageType,
} from '../@types/data-contracts'
import {
  MutationHookParams,
  Parameter,
  QueryHookParams,
  RequestFnReturn,
} from '../@types/react-query-type'
import { InstructionApi } from './Instruction.api'

/**
 * !DO NOT EDIT THIS FILE
 *
 * 스크립트가 실행될때, 파일을 항상 새로 쓰기 때문에 파일 수정시 작성내용이 제거 될 수 있습니다.
 */

/**
 * tok-cli.config.ts 에서 설정된 instance 경로의 axios instace 가 적용된, api 의 instance 입니다.
 */
export const instructionApi = new InstructionApi({
  customFetch: fetchExtended,
})

/**
 * query key 에 undefined 를 포함시키지 않기 위한 함수입니다.
 */
const isDefined = (v: unknown) => typeof v !== 'undefined'

/**
 * query-keys
 */
export const QUERY_KEY_INSTRUCTION_API = {
  PROJECT_INSTRUCTION_RETRIEVE: (
    variables?: Parameter<typeof instructionApi.projectInstructionRetrieve>,
  ) => ['PROJECT_INSTRUCTION_RETRIEVE', variables].filter(isDefined),
  PROJECT_INSTRUCTION_PARTIAL_UPDATE: () => [
    'PROJECT_INSTRUCTION_PARTIAL_UPDATE',
  ],
  PROJECT_INSTRUCTION_DESTROY: () => ['PROJECT_INSTRUCTION_DESTROY'],
}

/**
 * No description
 *
 * @tags instruction
 * @name ProjectInstructionRetrieve
 * @summary 지시서 상세 조회
 * @request GET:/v1/project/{project_slug}/instruction/{id}/
 * @secure    */

export const useProjectInstructionRetrieveQuery = <
  TData = RequestFnReturn<typeof instructionApi.projectInstructionRetrieve>,
>(
  params: QueryHookParams<
    typeof instructionApi.projectInstructionRetrieve,
    { error: CommonErrorType },
    TData
  >,
) => {
  const queryKey = QUERY_KEY_INSTRUCTION_API.PROJECT_INSTRUCTION_RETRIEVE(
    params.variables,
  )
  return useQuery({
    queryKey,
    queryFn: () => instructionApi.projectInstructionRetrieve(params.variables),
    ...params?.options,
  })
}

/**
 * No description
 *
 * @tags instruction
 * @name ProjectInstructionPartialUpdate
 * @summary 지시서 수정
 * @request PATCH:/v1/project/{project_slug}/instruction/{id}/
 * @secure  */

export const useProjectInstructionPartialUpdateMutation = (
  params: MutationHookParams<
    typeof instructionApi.projectInstructionPartialUpdate,
    { error: InstructionErrorMessageType | CommonErrorType }
  >,
) => {
  const mutationKey =
    QUERY_KEY_INSTRUCTION_API.PROJECT_INSTRUCTION_PARTIAL_UPDATE()
  return useMutation({
    mutationKey,
    mutationFn: instructionApi.projectInstructionPartialUpdate,
    ...params?.options,
  })
}

/**
 * No description
 *
 * @tags instruction
 * @name ProjectInstructionDestroy
 * @summary 지시서 삭제
 * @request DELETE:/v1/project/{project_slug}/instruction/{id}/
 * @secure  */

export const useProjectInstructionDestroyMutation = (
  params: MutationHookParams<
    typeof instructionApi.projectInstructionDestroy,
    { error: CommonErrorType }
  >,
) => {
  const mutationKey = QUERY_KEY_INSTRUCTION_API.PROJECT_INSTRUCTION_DESTROY()
  return useMutation({
    mutationKey,
    mutationFn: instructionApi.projectInstructionDestroy,
    ...params?.options,
  })
}
