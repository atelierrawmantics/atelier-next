import { ContentType, HttpClient, RequestParams } from '../@http-client'
import {
  CommonErrorType,
  PaginatedSchematicListType,
  SchematicErrorMessageType,
  SchematicRequestType,
  SchematicType,
  SchematicUseErrorMessageType,
} from '../@types/data-contracts'
import { DeepOmitReadOnly } from '../@types/util-types'

/**
 * !DO NOT EDIT THIS FILE
 *
 * 스크립트가 실행될때, 파일을 항상 새로 쓰기 때문에 파일 수정시 작성내용이 제거 될 수 있습니다.
 */

export class SchematicApi<
  SecurityDataType = unknown,
> extends HttpClient<SecurityDataType> {
  /**
   * No description
   *
   * @tags schematic
   * @name ProjectSchematicList
   * @summary 도식화 목록 조회
   * @request GET:/v1/project/{project_slug}/schematic/
   * @secure
   */

  projectSchematicList = (variables: {
    projectSlug: string
    query?: {
      /** The pagination cursor value. */
      cursor?: string
      /** Number of results to return per page. */
      page_size?: number
    }
    params?: RequestParams
  }) =>
    this.request<PaginatedSchematicListType, CommonErrorType>({
      path: `/v1/project/${variables.projectSlug}/schematic/`,
      method: 'GET',
      query: variables.query,
      secure: true,
      format: 'json',
      ...variables.params,
    }) /**
   * No description
   *
   * @tags schematic
   * @name ProjectSchematicCreate
   * @summary 도식화 등록
   * @request POST:/v1/project/{project_slug}/schematic/
   * @secure
   */

  projectSchematicCreate = (variables: {
    projectSlug: string
    data: DeepOmitReadOnly<SchematicRequestType>
    params?: RequestParams
  }) =>
    this.request<SchematicType, SchematicErrorMessageType | CommonErrorType>({
      path: `/v1/project/${variables.projectSlug}/schematic/`,
      method: 'POST',
      body: variables.data,
      secure: true,
      type: ContentType.Json,
      format: 'json',
      ...variables.params,
    }) /**
   * No description
   *
   * @tags schematic
   * @name ProjectSchematicRetrieve
   * @summary 도식화 상세 조회
   * @request GET:/v1/project/{project_slug}/schematic/{id}/
   * @secure
   */

  projectSchematicRetrieve = (variables: {
    projectSlug: string
    id: number
    params?: RequestParams
  }) =>
    this.request<SchematicType, CommonErrorType>({
      path: `/v1/project/${variables.projectSlug}/schematic/${variables.id}/`,
      method: 'GET',
      secure: true,
      format: 'json',
      ...variables.params,
    }) /**
   * No description
   *
   * @tags schematic
   * @name ProjectSchematicUseCreate
   * @summary 도식화 사용
   * @request POST:/v1/project/{project_slug}/schematic/{id}/use/
   * @secure
   */

  projectSchematicUseCreate = (variables: {
    projectSlug: string
    id: number
    params?: RequestParams
  }) =>
    this.request<void, SchematicUseErrorMessageType | CommonErrorType>({
      path: `/v1/project/${variables.projectSlug}/schematic/${variables.id}/use/`,
      method: 'POST',
      secure: true,
      ...variables.params,
    })
}

//
